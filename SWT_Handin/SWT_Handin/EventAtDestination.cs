///////////////////////////////////////////////////////////
//  EventAtDestination.cs
//  Implementation of the Class EventAtDestination
//  Generated by Enterprise Architect
//  Created on:      18-jun-2014 01:26:32
//  Original author: Pierre
///////////////////////////////////////////////////////////


using System.Collections.Generic;

namespace SWT_Handin
{
    public class EventAtDestination : IEvent
    {
        private ATC _atc;

        public void AttachToAtc(ATC airTrafficControl)
        {
            _atc = airTrafficControl;
        }

        public List<EventMessage> CheckEventConditionsAndHandle(List<ITrack> tracks)
        {
            var affectedTracks = new List<EventMessage>();
            foreach (ITrack track in tracks)
            {
                if (track.Position.Coordinates[1] >= _atc.AreaHeight && track.TrackDirection == Direction.South)
                {
                    affectedTracks.Add(new EventMessage(new List<ITrack> {track}, GetType()));
                }
                if (track.Position.Coordinates[0] >= _atc.AreaWidth && track.TrackDirection == Direction.East)
                {
                    affectedTracks.Add(new EventMessage(new List<ITrack> {track}, GetType()));
                }

                if (track.Position.Coordinates[1] <= 0 && track.TrackDirection == Direction.North)
                {
                    affectedTracks.Add(new EventMessage(new List<ITrack> {track}, GetType()));
                }
                if (track.Position.Coordinates[0] <= 0 && track.TrackDirection == Direction.West)
                {
                    affectedTracks.Add(new EventMessage(new List<ITrack> {track}, GetType()));
                }
            }

            HandleEvent(affectedTracks);
            return affectedTracks;
        }

        public void HookToDetector()
        {
            EventHandler.EventList.Add(this);
        }

        private void HandleEvent(List<EventMessage> tracks)
        {
            foreach (EventMessage track in tracks)
            {
                _atc.HandOff(track.InvolvedTracks[0]);
            }
        }
    }
} //end EventAtDestination