///////////////////////////////////////////////////////////
//  EventDetector.cs
//  Implementation of the Class EventDetector
//  Generated by Enterprise Architect
//  Created on:      18-jun-2014 01:26:32
//  Original author: Pierre
///////////////////////////////////////////////////////////


using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;

namespace SWT_Handin
{
    public class EventHandler
    {
        public static List<IEvent> EventList = new List<IEvent>();

        private EventHandler(ref ATC atc)
        {
            IEnumerable<IEvent> instances = from t in Assembly.GetExecutingAssembly().GetTypes()
                where t.GetInterfaces().Contains(typeof (IEvent))
                      && t.GetConstructor(Type.EmptyTypes) != null
                select Activator.CreateInstance(t) as IEvent;

            foreach (IEvent instance in instances)
            {
                instance.HookToDetector();
                instance.AttachToAtc(ref atc);
            }
        }

        public static void DetectEvents(List<ITrack> tracks)
        {
            foreach (IEvent evnt in EventList)
            {
                evnt.CheckEventConditions(tracks);
            }
        }
    }
} //end EventDetector