///////////////////////////////////////////////////////////
//  EventAtDestinationTest.cs
//  Implementation of the Class EventAtDestinationTest
//  Generated by Enterprise Architect
//  Created on:      18-jun-2014 01:26:50
//  Original author: Pierre
///////////////////////////////////////////////////////////


using System;
using System.Collections.Generic;
using System.Security.Cryptography.X509Certificates;
using NSubstitute;
using NSubstitute.Exceptions;
using NUnit.Framework;

namespace SWT_Handin.Tests.Unit
{
    [TestFixture]
    public class EventAtDestinationTest
    {
        [Test]
        public void DetectEvent_Handof_East()
        {
            var atc = Substitute.For<ATC>();            var myHappening = new EventAtDestination();
            myHappening.AttachToAtc(ref atc);
            var t1 = new TwoDTrackFactory().CreateTrack("Test", 80, new TwoDPosition(101, 50), Direction.East);
            myHappening.CheckEventConditions(new List<ITrack>{t1});
            atc.Received().HandOff(Arg.Any<ITrack>());
        }

        public void DetectEvent_Handof_West()
        {
            var atc = Substitute.For<ATC>(); var myHappening = new EventAtDestination();
            myHappening.AttachToAtc(ref atc);
            var t1 = new TwoDTrackFactory().CreateTrack("Test", 80, new TwoDPosition(0, 50), Direction.West);
            myHappening.CheckEventConditions(new List<ITrack> { t1 });
            atc.Received().HandOff(Arg.Any<ITrack>());
        }

        public void DetectEvent_Handof_North()
        {
            var atc = Substitute.For<ATC>(); var myHappening = new EventAtDestination();
            myHappening.AttachToAtc(ref atc);
            var t1 = new TwoDTrackFactory().CreateTrack("Test", 80, new TwoDPosition(50, 0), Direction.East);
            myHappening.CheckEventConditions(new List<ITrack> { t1 });
            atc.Received().HandOff(Arg.Any<ITrack>());
        }
        public void DetectEvent_Handof_South()
        {
            var atc = Substitute.For<ATC>(); var myHappening = new EventAtDestination();
            myHappening.AttachToAtc(ref atc);
            var t1 = new TwoDTrackFactory().CreateTrack("Test", 80, new TwoDPosition(50, 100), Direction.East);
            myHappening.CheckEventConditions(new List<ITrack> { t1 });
            atc.Received().HandOff(Arg.Any<ITrack>());
        }
    } //end EventAtDestinationTest
} //end namespace UnitTests